(in-package :cl-spatial-hash-grid)
(fiveam:def-suite shg-tests)
(fiveam:in-suite shg-tests)

(defun create-shg-and-insert (size loc dim)
  (let ((shg (make-spatial-hash-grid size))
	(ent (make-entity loc dim)))
    (shg-insert shg ent)
    shg))

(defun create-shg-and-remove (size loc dim)
  (let ((shg (make-spatial-hash-grid size))
	(ent (make-entity loc dim)))
    (shg-insert shg ent)
    (shg-remove shg ent)
    shg))

(defun hash-keys (hash-table)
  (loop for key being the hash-keys of hash-table collect key))

(fiveam:test grid-insert
  "Test the insert method of a spatial hash grid."
  (let ((t0 (shg-cells (create-shg-and-insert 1 '(1.9 2.5) '(0.3 0.3))))
	(t1 (shg-cells (create-shg-and-insert 1 '(0.4 0.4) '(0.1 0.1))))
	(t2 (shg-cells (create-shg-and-insert 5 '(0.4 0.4) '(0.1 0.1))))
	(t3 (shg-cells (create-shg-and-insert 1 '(0 0) '(1 1))))
	(t4 (shg-cells (create-shg-and-insert 1 '(5 5) '(1 1))))
	(t5 (shg-cells (create-shg-and-insert 5 '(0 0) '(1 1)))))
    (fiveam:is (not (set-difference '((1 2) (2 2)) (hash-keys t0) :test 'equal)))
    (fiveam:is (not (set-difference '((0 0)) (hash-keys t1) :test 'equal)))
    (fiveam:is (not (set-difference '((0 0)) (hash-keys t2) :test 'equal)))
    (fiveam:is (= 2 (hash-table-count t0)))
    (fiveam:is (= 1 (hash-table-count t1)))
    (fiveam:is (= 1 (hash-table-count t2)))
    (fiveam:is (= 9 (hash-table-count t3)))
    (fiveam:is (= 9 (hash-table-count t4)))
    (fiveam:is (= 4 (hash-table-count t5)))))

(fiveam:test grid-remove
  "Test the remove method of a spatial hash grid."
  (let ((t0 (shg-cells (create-shg-and-remove 1 '(0 0) '(1 1)))))
    (fiveam:is (= 0 (hash-table-count t0))))
  (let* ((t1 (make-spatial-hash-grid 1))
	 (e0 (make-entity '(4 3) '(2 2)))
	 (e1 (make-entity '(2 1) '(1 1)))
	 (e2 (make-entity '(44 22) '(4 4))))
    (shg-insert t1 e0)
    (shg-insert t1 e1)
    (shg-insert t1 e2)
    (shg-remove t1 e0)
    (shg-remove t1 e1)
    (shg-remove t1 e2)
    (fiveam:is (= 0 (hash-table-count (shg-cells t1))))))

(fiveam:test grid-find
  "Test the find method of a spatial hash grid."
  (let ((t0 (create-shg-and-insert 1 '(0 0) '(1 1))))
    (fiveam:is (= 1 (length (shg-find t0 '(-1 -1) '(1.1 1.1))))))
  (let* ((t1 (make-spatial-hash-grid 1))
	 (e0 (make-entity '(1.5 1.5) '(0.1 0.1)))
	 (e1 (make-entity '(1.9 1.9) '(0.2 0.2)))
	 (e2 (make-entity '(2.2 1.2) '(0.15 0.15))))
    (shg-insert t1 e0)
    (shg-insert t1 e1)
    (shg-insert t1 e2)
    (fiveam:is (= 3 (length (shg-find t1 '(1 1) '(2 2)))))
    (fiveam:is (= 1 (length (shg-find t1 '(1 2.1) '(2 2)))))
    (fiveam:is (= 2 (length (shg-find t1 '(1 1) '(0.8 0.2)))))))

(fiveam:run!)
